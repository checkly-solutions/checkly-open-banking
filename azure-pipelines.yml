trigger:

- main  # Modify as per your trigger requirement

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: checkly-variables  # Assume you have a variable group set up with CHECKLY_API_KEY, CHECKLY_ACCOUNT_ID
- name: ENVIRONMENT_URL
  value: $(Build.SourceBranchUri)  # Adjust as needed
- name: CHECKLY_TEST_ENVIRONMENT
  value: $(Build.SourceBranchName)  # Adjust as needed

jobs:
- job: test_e2e
  displayName: 'Test E2E on Checkly'
  pool:
    vmImage: 'ubuntu-latest'
  timeoutInMinutes: 10
  steps:
    - checkout: self
      fetchDepth: 0

    - script: |
        echo "Setting branch name"
        CHECKLY_TEST_REPO_BRANCH=$(git show -s --pretty=%D HEAD | tr -s ',' '\n' | grep -e 'origin/' | head -1 | sed 's/origin\///g')
        echo "##vso[task.setvariable variable=CHECKLY_TEST_REPO_BRANCH]$CHECKLY_TEST_REPO_BRANCH"
      displayName: 'Set branch name'

    - task: NodeTool@0
      inputs:
        versionSource: 'spec'
        versionSpec: '6.10.0'

    - task: Cache@2
      inputs:
        key: 'npm | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
           npm | "$(Agent.OS)"
        path: node_modules
      displayName: 'Cache node_modules'

    - script: |
        if [ ! -d "node_modules" ]; then
          npm ci
        fi
      displayName: 'Install dependencies'

    - script: |
        npx checkly test --reporter=list --record
      displayName: 'Run checks'
      continueOnError: true # To ensure the next steps run even if this fails
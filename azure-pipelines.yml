trigger:

- main  # Modify as per your trigger requirement

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: checkly-variables  # Assume you have a variable group set up with CHECKLY_API_KEY, CHECKLY_ACCOUNT_ID
- name: ENVIRONMENT_URL
  value: $(Build.SourceBranchUri)  # Adjust as needed
- name: CHECKLY_TEST_ENVIRONMENT
  value: $(Build.SourceBranchName)  # Adjust as needed

jobs:
- job: test_e2e
  displayName: 'Test E2E on Checkly'
  pool:
    vmImage: 'ubuntu-latest'
  timeoutInMinutes: 10
  
  variables:
    npm_config_cache: $(Pipeline.Workspace)/.npm

steps:
    - checkout: self
      fetchDepth: 0

    - script: |
        echo "Setting branch name"
        CHECKLY_TEST_REPO_BRANCH=$(git show -s --pretty=%D HEAD | tr -s ',' '\n' | grep -e 'origin/' | head -1 | sed 's/origin\///g')
        echo "##vso[task.setvariable variable=CHECKLY_TEST_REPO_BRANCH]$CHECKLY_TEST_REPO_BRANCH"
      displayName: 'Set branch name'

    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'

    - task: Cache@2
      inputs:
        key: 'package-lock.json'
        path: $(npm_config_cache)
      displayName: Cache NPM packages
    - script: npm ci --cache $(npm_config_cache)
        displayName: NPM Install Dependencies
    - script: |
        npm cache ls
        npm cache verify
      displayName: NPM Show cache

    - script: |
        npx checkly test
      displayName: 'Run checks'
      continueOnError: true # To ensure the next steps run even if this fails
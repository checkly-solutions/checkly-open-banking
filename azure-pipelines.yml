trigger:

- main  # Modify as per your trigger requirement

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: checkly-variables  # Assume you have a variable group set up with CHECKLY_API_KEY, CHECKLY_ACCOUNT_ID
- name: ENVIRONMENT_URL
  value: $(Build.SourceBranchUri)  # Adjust as needed
- name: CHECKLY_TEST_ENVIRONMENT
  value: $(Build.SourceBranchName)  # Adjust as needed

jobs:
- job: TestE2E
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))  # Adjust condition as needed
  displayName: 'Test E2E on Checkly'

  steps:
  - checkout: self
    persistCredentials: true
    clean: true

  - script: |
      echo "Setting branch name"
      echo "CHECKLY_TEST_REPO_BRANCH=$(git show -s --pretty=%D HEAD | tr -s ',' '\n' | grep -e 'origin/' | head -1 | sed 's/origin\///g')" >> $(Build.SourcesDirectory)/.env
    displayName: 'Set branch name'

  - task: NodeTool@0
    inputs:
      versionSource: 'spec'
      versionSpec: '6.10.0'

  - task: Cache@2
    inputs:
      key: 'node | "$(Agent.OS)" | package-lock.json'
      path: node_modules
      restoreKeys: |
        node | "$(Agent.OS)"
    displayName: 'Cache node_modules'

  - script: |
      echo Add other commands here
      echo $(Build.SourceBranch)
    displayName: 'Run a multi-line script'

  - script: |
      npx checkly test --reporter=github --record
    env:
      ENVIRONMENT_URL: $(Build.Repository.Uri)
    displayName: 'Run Checkly tests'

  - script: |
      cat checkly-github-report.md
    displayName: 'Create summary'

  - script: |
      npx checkly deploy --force
    condition: and(succeeded(), eq(variables['CHECKLY_TEST_ENVIRONMENT'], 'Production'))
    displayName: 'Deploy checks'
